# Sets the minimum version of CMake required to build the native
# library. You should either keep the default value or only pass a
# value of 3.4.0 or lower.

cmake_minimum_required(VERSION 3.4.1)

set(IPERF_SRC ${CMAKE_SOURCE_DIR}/iperf )


include_directories(iperf/src)

# generate src/iperf_config.h
#configure_file(${CMAKE_SOURCE_DIR}/src/main/assets/iperf_config.h.in ${CMAKE_BINARY_DIR}/src/iperf_config.h)
#configure_file(${IPERF_SRC}/src/iperf_config.h.in ${CMAKE_BINARY_DIR}/src/iperf_config.h)



###################################

# Creates and names a library, sets it as either STATIC
# or SHARED, and provides the relative paths to its source code.
# You can define multiple libraries, and CMake builds it for you.
# Gradle automatically packages shared libraries with your APK.


add_library( jni SHARED
        src/main/cpp/hello.c
        src/main/cpp/test_run.c
        )


add_library( # build libiperf.so
        iperf
        SHARED

        ${IPERF_SRC}/src/cjson.c
        ${IPERF_SRC}/src/iperf_api.c
        ${IPERF_SRC}/src/iperf_error.c
        ${IPERF_SRC}/src/iperf_client_api.c
        ${IPERF_SRC}/src/iperf_locale.c
        ${IPERF_SRC}/src/iperf_server_api.c
        ${IPERF_SRC}/src/iperf_tcp.c
        ${IPERF_SRC}/src/iperf_udp.c
        ${IPERF_SRC}/src/iperf_sctp.c
        ${IPERF_SRC}/src/iperf_util.c
        ${IPERF_SRC}/src/net.c
        ${IPERF_SRC}/src/tcp_info.c
        ${IPERF_SRC}/src/tcp_window_size.c
        ${IPERF_SRC}/src/timer.c
        ${IPERF_SRC}/src/units.c
        )

# Searches for a specified prebuilt library and stores the path as a
# variable. Because system libraries are included in the search path by
# default, you only need to specify the name of the public NDK library
# you want to add. CMake verifies that the library exists before
# completing its build.

find_library( # Sets the name of the path variable.
        log-lib

        # Specifies the name of the NDK library that
        # you want CMake to locate.
        log )

# Specifies libraries CMake should link to your target library. You
# can link multiple libraries, such as libraries you define in the
# build script, prebuilt third-party libraries, or system libraries.

target_link_libraries( # Specifies the target library.
        iperf

        # Links the target library to the log library
        # included in the NDK.
        ${log-lib} )

target_link_libraries(iperf log)

target_link_libraries(jni iperf log)
